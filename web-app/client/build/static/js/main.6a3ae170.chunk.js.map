{"version":3,"sources":["logo.svg","Components/ShoppingList.tsx","Components/Common/HeaderBar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ShoppingList","props","className","listName","HeaderBar","id","href","firstName","App","state","response","post","responseToPost","callApi","a","fetch","console","log","json","body","status","Error","message","handleSubmit","e","preventDefault","method","headers","JSON","stringify","text","setState","this","then","res","express","catch","err","onSubmit","type","value","onChange","target","src","logo","alt","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAAe,MAA0B,iC,OCmB1BA,EAb8B,SAACC,GAC1C,OACI,sBAAKC,UAAU,gBAAf,UACA,oDAAuBD,EAAME,YAC7B,+BACI,2CACA,0CACA,gDCIGC,EAXwB,SAACH,GACpC,OACI,qBAAII,GAAG,iBAAP,UACI,6BAAI,mBAAGC,KAAK,eAAR,oBACJ,6BAAI,oBAAGA,KAAK,YAAR,UAAqBL,EAAMM,UAA3B,eACJ,6BAAI,mBAAGD,KAAK,eAAR,uBACJ,6BAAI,mBAAGA,KAAK,aAAR,4BCyDDE,G,kNA9DbC,MAAQ,CACNC,SAAU,GACVC,KAAM,GACNC,eAAgB,I,EASlBC,Q,sBAAU,8BAAAC,EAAA,sEACeC,MAAM,cADrB,cACFL,EADE,OAERM,QAAQC,IAAIP,GAFJ,SAGWA,EAASQ,OAHpB,UAGFC,EAHE,OAIRH,QAAQC,IAAIE,GACY,MAApBT,EAASU,OALL,uBAK2BC,MAAMF,EAAKG,SALtC,iCAODH,GAPC,4C,EAUVI,a,uCAAe,WAAOC,GAAP,iBAAAV,EAAA,6DACbU,EAAEC,iBADW,SAEUV,MAAM,aAAc,CACzCW,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBR,KAAMS,KAAKC,UAAU,CAAElB,KAAM,EAAKF,MAAME,SAP7B,cAEPD,EAFO,gBASMA,EAASoB,OATf,OASPX,EATO,OAWb,EAAKY,SAAS,CAAEnB,eAAgBO,IAXnB,2C,6GAhBf,WAA4B,IAAD,OACzBa,KAAKnB,UACFoB,MAAK,SAAAC,GAAG,OAAI,EAAKH,SAAS,CAAErB,SAAUwB,EAAIC,aAC1CC,OAAM,SAAAC,GAAG,OAAIrB,QAAQC,IAAIoB,Q,oBA2B9B,WAAwB,IAAD,OACrB,OACE,sBAAKnC,UAAU,MAAf,UACE,cAAC,EAAD,CAAWK,UAAU,UACrB,wBAAQL,UAAU,aAAlB,SACE,cAAC,EAAD,CAAcC,SAAS,kBAEzB,4BAAI6B,KAAKvB,MAAMC,WACf,uBAAM4B,SAAUN,KAAKT,aAArB,UACE,4BACE,uDAEF,uBACEgB,KAAK,OACLC,MAAOR,KAAKvB,MAAME,KAClB8B,SAAU,SAAAjB,GAAC,OAAI,EAAKO,SAAS,CAAEpB,KAAMa,EAAEkB,OAAOF,WAEhD,wBAAQD,KAAK,SAAb,uBAEF,4BAAIP,KAAKvB,MAAMG,iBACf,qBAAK+B,IAAKC,EAAM1C,UAAU,WAAW2C,IAAI,gB,GAzD/BC,cCQHC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6a3ae170.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { FC } from \"react\";\r\n\r\ninterface ShoppingListProps {\r\n    listName: string;\r\n}\r\n\r\nconst ShoppingList : FC<ShoppingListProps> = (props) : JSX.Element => {\r\n    return (\r\n        <div className=\"shopping-list\">\r\n        <h1>Shopping List for {props.listName}</h1>\r\n        <ul>\r\n            <li>Instagram</li>\r\n            <li>WhatsApp</li>\r\n            <li>Occulus</li>\r\n        </ul>\r\n        </div>   \r\n    );\r\n}\r\n\r\nexport default ShoppingList;","import {FC} from 'react';\r\n\r\ninterface HeaderBarProps {\r\n    firstName: string;\r\n}\r\n\r\nconst HeaderBar : FC<HeaderBarProps> = (props) : JSX.Element => {\r\n    return(\r\n        <ul id='navigation-bar'>\r\n            <li><a href=\"default.html\">Home</a></li>\r\n            <li><a href=\"news.html\">{props.firstName}&#39;s Page</a></li>\r\n            <li><a href=\"contact.html\">Contact</a></li>\r\n            <li><a href=\"about.html\">Settings</a></li>\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default HeaderBar;","import { Component } from 'react';\r\nimport logo from './logo.svg';\r\nimport ShoppingList from './Components/ShoppingList';\r\nimport HeaderBar from './Components/Common/HeaderBar';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    response: '',\r\n    post: '',\r\n    responseToPost: '',\r\n  };\r\n  \r\n  componentDidMount() : void {\r\n    this.callApi()\r\n      .then(res => this.setState({ response: res.express }))\r\n      .catch(err => console.log(err));\r\n  }\r\n  \r\n  callApi = async (): Promise<any> => {\r\n    const response = await fetch('/api/hello');\r\n    console.log(response);\r\n    const body = await response.json();\r\n    console.log(body);\r\n    if (response.status !== 200) throw Error(body.message);\r\n    \r\n    return body;\r\n  };\r\n  \r\n  handleSubmit = async (e:any) : Promise<void> => {\r\n    e.preventDefault();\r\n    const response = await fetch('/api/world', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ post: this.state.post }),\r\n    });\r\n    const body = await response.text();\r\n    \r\n    this.setState({ responseToPost: body });\r\n  };\r\n\r\n  render() : JSX.Element {\r\n    return (\r\n      <div className=\"App\">\r\n        <HeaderBar firstName='Naomi'/>\r\n        <header className=\"App-header\">\r\n          <ShoppingList listName='my app list'/>\r\n        </header>\r\n        <p>{this.state.response}</p>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <p>\r\n            <strong>Post to Server:</strong>\r\n          </p>\r\n          <input\r\n            type=\"text\"\r\n            value={this.state.post}\r\n            onChange={e => this.setState({ post: e.target.value })}\r\n          />\r\n          <button type=\"submit\">Submit</button>\r\n        </form>\r\n        <p>{this.state.responseToPost}</p>\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) : void => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}